import emoji from '../emoji.js';

export default {
	addObserver: 'Add alert ' + emoji.eyes,
	removeObserver: 'Delete alert ' + emoji.trash,
	short: 'Short',
	long: 'Long',
	back: emoji.leftArrow + ' Go back',
	symbol: 'Pair name (BTCUSDT)',
	whatDoYouWant: 'What do you want',
	completed: '<b>Done!</b>\n\nWe will send you alert when get target price!',
	toTheMain: 'To the main',
	error: 'I dont understand you',
	above: 'Above ' + emoji.above,
	below: 'Below ' + emoji.below,
	sendMessageWhen: 'Send alert when price goes above/below',
	pairNotExists: 'Invalid pair name',
	enterAlertPrice: 'Enter trigger price ' + emoji.bell,
	enterOnlyNumbers: 'Only numbers allowed',
	alertPriceError: 'Only numbers allowed (15000.00)',
	messageTemplate: 'Write message, what you want to get',
	messageTemplates: [
		[emoji.siren, 'STOP LOSS', emoji.siren].join(' '),
		[emoji.bigMoney, 'TAKE PROFIT', emoji.bigMoney].join(' '),
	],
	pairSuccessfullyCreated: 'Pair successfully created',
	choosePair: 'Choose the pair',
	chooseRemovalAlert: 'Choose the alert that you want to delete',
	youNotCreatedThisPair: 'You not created this pair',
	pairSuccessfullyRemoved: 'Pair successfully removed',
	tradeSuccessfullyRemoved: 'Trade successfully removed',
	iDontUnderstand: 'I dont understand',
	quotes: 'Quotes ' + emoji.spike,
	loadingQuotes: 'Loading quites ' + emoji.imagine,
	start: 'Start',
	listIsEmpty: 'List is empty ' + emoji.ufo,
	spiking: 'Price is spiking ' + emoji.spike,
	update: 'Update ' + emoji.thinking,
	tradeType: 'Choose trade type',
	tradePrice: 'Enter trade price',
	tradeCreated:
		'<b>Trade successfully created</b>\n\nNow you can observe dynamic in quotes section',
	addTrade: 'Add trade ' + emoji.dollar,
	removeTrade: 'Delete trade ' + emoji.trash,
	shoulder: 'Shoulder size',
	feedback:
		'You can rate this bot, leave request for expansions or say about some bugs',
	thanksForFeedback: 'Thanks! Message was sent to administartor',
	leaveFeedback: 'Feedback ' + emoji.pen,
	selectDesiredFunction: '<b>Select desired function</b>',
	quotesFetchError: 'Quotes fetch error\nRetry',
	miss: 'Miss ⤵️',
	stopLossIfExist:
		'Stop loss value (if exists). We will send you alert if value will triggered',
	takeProfitIfExist:
		'Take profit value (if exists). We will send you alert if value will triggered',
	yes: 'Yes',
	spikingIfNeeded: `Do you want to observe spiking ${emoji.spike}?`,
	deleteAllAlerts: 'Delete all ' + emoji.trash,
	pairStat: 'Pair stat',
	enterPairNameOrSelect: 'Enter pair name or select favorite',
	alerts: 'Alerts ' + emoji.bell,
	trades: 'Trades ' + emoji.case,
	stats: 'Stats',
	priceSpiking: 'Price spiking',
	interval: 'Interval',
	currentPrice: 'Current price',
	previousPrice: 'Previous price',
	secExp: 'sec.',
	minExp: 'min.',
	entry: 'Entry',
};
